"""
Django settings for bookmark project.

Generated by 'django-admin startproject' using Django 3.2.14.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-61#i8p4vt3j%u&6hnka-vpt#2%2!+%r_y#g7s5!o-u#rg^r7pr'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'account.apps.AccountConfig',
    'images.apps.ImagesConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'social_django',
    'django_extensions',
    
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bookmark.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmark.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = ((os.path.join(BASE_DIR, 'static')), )

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# --using url patterns that defined using name attribute of the path() function--|
# --redirect the user to after successful login if no next parameters is present in the request
LOGIN_REDIRECT_URL = 'dashboard'
# --redirect the user to log in (ex: views using the login_required decorator)
LOGIN_URL = 'login'
# --to redirect the user to log out
LOGOUT_URL = 'logout'

# --Simple Mail Transfer Protocol(SMTP)
# --The email_backend setting indicates the class to use to send emails.
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# --Enable django to serve media files
# -- MEDIA_URL is the base url used to serve the media files uploaded by user
# -- MEDIA_ROOT is the local path where they reside.
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# --Custom authentication backend--
AUTHENTICATION_BACKEND = [
    'django.contrib.auth.backend.ModelBackend',
    'account.authentication.EmailAuthBackend',
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'social_core.backends.google.GoogleOAuth2',
]

# ---Facebook auth ---|
# -- Facebook App ID
SOCIAL_AUTH_FACEBOOK_KEY = '3213266609002680' 
# -- Facebook App secret
SOCIAL_AUTH_FACEBOOK_SECRET = '03c5fb244085ef50337580a9a1329aba'
# --Optional , extra permissions to ask facebook users
SOCIAL_AUTH_FACEBOOK_SCOPE = 'EMAIL'

# --- Twitter auth ---|
# --Twitter api key
SOCIAL_AUTH_TWITTER_KEY = 'sGKV5cxH4WZG8yBzyweXclkI3'
# --Twitter api secret
SOCIAL_AUTH_TWITTER_SECRET = 'Ybgg6qdD3K7LDR68f9PR28dajQ69wIhjTtz3nsGaQRRaA04pre'

# ---Google auth ---|
# --Google consumer key
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '351936009227-e5mkhs4rdcd6q1bnb4lgh9bohlff0lps.apps.googleusercontent.com'
# --Google consumer secret
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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'

# --Allowed hosts
ALLOWED_HOSTS = ['mysite.com', 'localhost', '127.0.0.1']
